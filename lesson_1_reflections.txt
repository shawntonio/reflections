How did viewing a diff between two versions of a file help you see the bug that was introduced?

By using diff to compare two files I was able to focus in on the changes that were made 
making it easier to spot the bug then when caparing the entire file. 


How could having easy access to the entire history of a file make you a more efficient programmer inf the long term?

If the additions I add to a file end up not being what I need I can easily go back to a previous version of what is correct.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions autmatically saved, like Google Docs does?

The con of manually creating a commit is I have to manually do it but the pros are being able to make versions that make sense, that are easy to read and use. 


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because the type of files used in Git are likely to be related to each other while the types of files used in Google Docs are likely not interelated.


How can you use the commands git log and git diff to view the history of files?

I can use git log to see all previous commits and I can use git diff to compare each commit to see what was added or taken away.


How might using version control make you more confident to make changes that could break something?

If a change I make does break something while using version control it can easily be found and fixed.


Now that you have your workspace set up, what do you want to try using Git for?

debugging
